name: Rust Cross-Platform Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  PROJECT_NAME: rocker # Name of the binary (without .exe)

jobs:
  build:
    name: Build for ${{ matrix.os_name }} (${{ matrix.target }})
    runs-on: ${{ matrix.os_image }} # Changed
    strategy:
      matrix:
        include:
          - os_name: Linux
            os_image: ubuntu-latest # Added
            target: x86_64-unknown-linux-gnu
            artifact_name: rocker-linux-amd64
            asset_name: rocker-linux-amd64
            use_cross: false
          - os_name: Windows
            os_image: windows-latest # Added
            target: x86_64-pc-windows-msvc # Changed
            artifact_name: rocker-windows-amd64
            asset_name: rocker-windows-amd64.exe
            use_cross: false
          - os_name: macOS-arm64
            os_image: macos-latest # Added
            target: aarch64-apple-darwin
            artifact_name: rocker-macos-arm64
            asset_name: rocker-macos-arm64
            use_cross: false # Changed

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    # Removed "Install dependencies for Windows cross-compilation (if applicable)" step

    - name: Install cross (if applicable)
      if: matrix.use_cross == true # This step will now be skipped for all matrix entries
      run: cargo install cross --git https://github.com/cross-rs/cross --branch main

    - name: Build binary
      run: |
        if [[ "${{ matrix.use_cross }}" == "true" ]]; then
          cross build --release --target ${{ matrix.target }}
        else
          cargo build --release --target ${{ matrix.target }}
        fi
        SOURCE_PATH="target/${{ matrix.target }}/release/${{ env.PROJECT_NAME }}"
        # Adjusted condition to be robust for Windows targets
        if [[ "${{ matrix.target }}" == "x86_64-pc-windows-msvc" || "${{ matrix.target }}" == "x86_64-pc-windows-gnu" ]]; then
          SOURCE_PATH="${SOURCE_PATH}.exe"
        fi
        cp "${SOURCE_PATH}" "${{ matrix.asset_name }}"

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.asset_name }}
        retention-days: 7
